/***************************************************************************
 *   Copyright (C) 2006 by Dominik Seichter                                *
 *   domseichter@web.de                                                    *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Library General Public License as       *
 *   published by the Free Software Foundation; either version 2 of the    *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU Library General Public     *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 *                                                                         *
 *   In addition, as a special exception, the copyright holders give       *
 *   permission to link the code of portions of this program with the      *
 *   OpenSSL library under certain conditions as described in each         *
 *   individual source file, and distribute linked combinations            *
 *   including the two.                                                    *
 *   You must obey the GNU General Public License in all respects          *
 *   for all of the code used other than OpenSSL.  If you modify           *
 *   file(s) with this exception, you may extend this exception to your    *
 *   version of the file(s), but you are not obligated to do so.  If you   *
 *   do not wish to do so, delete this exception statement from your       *
 *   version.  If you delete this exception statement from all source      *
 *   files in the program, then also delete it here.                       *
 ***************************************************************************/

/*
 * WARNING: This file was automatically generated by Beautiful Capi!
 * Do not edit this file! Please edit the source API description.
 *
 * Beautiful Capi project:
 * https://github.com/PetrPPetrov/beautiful-capi
 *
 * PoDoFo API description project:
 * https://github.com/GkmSoft/podofo-capi
 */


virtual ~PdfDocumentImpl() {}
virtual PoDoFo::EPdfWriteMode GetWriteMode() const = 0;
virtual PoDoFo::EPdfVersion GetPdfVersion() const = 0;
virtual bool IsLinearized() const = 0;
virtual PoDoFo::PdfInfo* GetInfo() const = 0;
virtual PoDoFo::PdfOutlines* GetOutlines(bool bCreate) = 0;
virtual PoDoFo::PdfNamesTree* GetNamesTree(bool bCreate) = 0;
virtual PoDoFo::PdfAcroForm* GetAcroForm(bool bCreate, PoDoFo::EPdfAcroFormDefaulAppearance eDefaultAppearance) = 0;
virtual PoDoFo::PdfPagesTreeImpl* GetPagesTree() const = 0;
virtual int GetPageCount() const = 0;
virtual PoDoFo::PdfPageImpl* GetPage(int nIndex) const = 0;
virtual PoDoFo::PdfFontImpl* CreateFont(const char* pszFontName, bool bSymbolCharset, PoDoFo::PdfEncodingImpl* pEncoding, PoDoFo::PdfFontCache::EFontCreationFlags eFontCreationFlags, bool bEmbedd) = 0;
virtual PoDoFo::PdfFontImpl* CreateFont(const char* pszFontName, bool bBold, bool bItalic, bool bSymbolCharset, PoDoFo::PdfEncodingImpl* pEncoding, PoDoFo::PdfFontCache::EFontCreationFlags eFontCreationFlags, bool bEmbedd, const char* pszFileName) = 0;
virtual PoDoFo::PdfFontImpl* CreateFont(FT_Face face, bool bSymbolCharset, PoDoFo::PdfEncodingImpl* pEncoding, bool bEmbedd) = 0;
virtual PoDoFo::PdfFontImpl* CreateDuplicateFontType1(PoDoFo::PdfFontImpl* pFont, const char* pszSuffix) = 0;
virtual PoDoFo::PdfFontImpl* CreateFontSubset(const char* pszFontName, bool bBold, bool bItalic, bool bSymbolCharset, PoDoFo::PdfEncodingImpl* pEncoding, const char* pszFileName) = 0;
virtual FT_Library GetFontLibrary() const = 0;
virtual void EmbedSubsetFonts() = 0;
virtual PoDoFo::PdfPageImpl* CreatePage(PoDoFo::PdfRect rSize) = 0;
virtual void CreatePages(Bcapi::Vector<PoDoFo::PdfRect> vecSizes) = 0;
virtual void InsertPage(PoDoFo::PdfRect rSize, int atIndex) = 0;
virtual PoDoFo::PdfDocumentImpl* Append(PoDoFo::PdfMemDocumentImpl rDoc, bool bAppendAll) = 0;
virtual PoDoFo::PdfDocumentImpl* InsertExistingPageAt(PoDoFo::PdfMemDocumentImpl rDoc, int nPageIndex, int nAtIndex) = 0;
virtual PoDoFo::PdfRect FillXObjectFromDocumentPage(PoDoFo::PdfXObjectImpl* pXObj, PoDoFo::PdfMemDocumentImpl rDoc, int nPage, bool bUseTrimBox) = 0;
virtual PoDoFo::PdfRect FillXObjectFromExistingPage(PoDoFo::PdfXObjectImpl* pXObj, int nPage, bool bUseTrimBox) = 0;
virtual PoDoFo::PdfRect FillXObjectFromPage(PoDoFo::PdfXObjectImpl* pXObj, PoDoFo::PdfPageImpl* pPage, bool bUseTrimBox, unsigned difference) = 0;
virtual void AttachFile(PoDoFo::PdfFileSpec rFileSpec) = 0;
virtual PoDoFo::PdfFileSpec* GetAttachment(PoDoFo::PdfString rName) = 0;
virtual void AddNamedDestination(PoDoFo::PdfDestination rDest, PoDoFo::PdfString rsName) = 0;
virtual void SetUseFullScreen() = 0;
virtual void SetHideToolbar() = 0;
virtual void SetHideMenubar() = 0;
virtual void SetHideWindowUI() = 0;
virtual void SetFitWindow() = 0;
virtual void SetCenterWindow() = 0;
virtual void SetDisplayDocTitle() = 0;
virtual void SetPrintScaling(PoDoFo::PdfName inScalingType) = 0;
virtual void SetBaseURI(const char* inBaseURI) = 0;
virtual void SetLanguage(const char* inLanguage) = 0;
virtual void SetBindingDirection(PoDoFo::PdfName inDirection) = 0;
virtual bool IsPrintAllowed() const = 0;
virtual bool IsEditAllowed() const = 0;
virtual bool IsCopyAllowed() const = 0;
virtual bool IsEditNotesAllowed() const = 0;
virtual bool IsFillAndSignAllowed() const = 0;
virtual bool IsAccessibilityAllowed() const = 0;
virtual bool IsDocAssemblyAllowed() const = 0;
virtual bool IsHighPrintAllowed() const = 0;
virtual PoDoFo::PdfVecObjects* GetObjects() = 0;
virtual PoDoFo::PdfVecObjects* GetObjects() const = 0;
virtual void SetFontConfigWrapper(PoDoFo::PdfFontConfigWrapper rFontConfig) = 0;
virtual PoDoFo::EPdfPageMode GetPageMode() const = 0;
virtual void SetPageMode(PoDoFo::EPdfPageMode page_mode) = 0;
