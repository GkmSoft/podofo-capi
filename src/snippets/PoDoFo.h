/***************************************************************************
 *   Copyright (C) 2006 by Dominik Seichter                                *
 *   domseichter@web.de                                                    *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU Library General Public License as       *
 *   published by the Free Software Foundation; either version 2 of the    *
 *   License, or (at your option) any later version.                       *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU Library General Public     *
 *   License along with this program; if not, write to the                 *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 *                                                                         *
 *   In addition, as a special exception, the copyright holders give       *
 *   permission to link the code of portions of this program with the      *
 *   OpenSSL library under certain conditions as described in each         *
 *   individual source file, and distribute linked combinations            *
 *   including the two.                                                    *
 *   You must obey the GNU General Public License in all respects          *
 *   for all of the code used other than OpenSSL.  If you modify           *
 *   file(s) with this exception, you may extend this exception to your    *
 *   version of the file(s), but you are not obligated to do so.  If you   *
 *   do not wish to do so, delete this exception statement from your       *
 *   version.  If you delete this exception statement from all source      *
 *   files in the program, then also delete it here.                       *
 ***************************************************************************/

/*
 * WARNING: This file was automatically generated by Beautiful Capi!
 * Do not edit this file! Please edit the source API description.
 *
 * Beautiful Capi project:
 * https://github.com/PetrPPetrov/beautiful-capi
 *
 * PoDoFo API description project:
 * https://github.com/GkmSoft/podofo-capi
 */

enum EPdfDataType
{
    ePdfDataType_Bool,
    ePdfDataType_Number,
    ePdfDataType_Real,
    ePdfDataType_String,
    ePdfDataType_HexString,
    ePdfDataType_Name,
    ePdfDataType_Array,
    ePdfDataType_Dictionary,
    //ePdfDataType_Stream,
    ePdfDataType_Null,
    ePdfDataType_Reference,
    ePdfDataType_RawData,
    ePdfDataType_Unknown
};
enum EPdfWriteMode
{
    ePdfWriteMode_Compact = 0x01,
    ePdfWriteMode_Clean = 0x02
};
enum EPdfColorSpace
{
    ePdfColorSpace_DeviceGray,
    ePdfColorSpace_DeviceRGB,
    ePdfColorSpace_DeviceCMYK,
    ePdfColorSpace_Separation,
    ePdfColorSpace_CieLab,
    ePdfColorSpace_Indexed,
    ePdfColorSpace_Unknown = 0xff
};
enum EPdfVersion
{
    ePdfVersion_1_0 = 0,
    ePdfVersion_1_1,
    ePdfVersion_1_2,
    ePdfVersion_1_3,
    ePdfVersion_1_4,
    ePdfVersion_1_5,
    ePdfVersion_1_6,
    ePdfVersion_1_7
};
enum EPdfFilter
{
    ePdfFilter_None = -1,
    ePdfFilter_ASCIIHexDecode,
    ePdfFilter_ASCII85Decode,
    ePdfFilter_LZWDecode,
    ePdfFilter_FlateDecode,
    ePdfFilter_RunLengthDecode,
    ePdfFilter_CCITTFaxDecode,
    ePdfFilter_JBIG2Decode,
    ePdfFilter_DCTDecode,
    ePdfFilter_JPXDecode,
    ePdfFilter_Cryp
};
enum EPdfPageMode
{
    ePdfPageModeDontCare,
    ePdfPageModeUseNone,
    ePdfPageModeUseThumbs,
    ePdfPageModeUseBookmarks,
    ePdfPageModeFullScreen,
    ePdfPageModeUseOC,
    ePdfPageModeUseAttachment
};
enum EPdfFontFlags
{
    ePdfFont_Normal     = 0x00,
    ePdfFont_Embedded   = 0x01,
    ePdfFont_Bold       = 0x02,
    ePdfFont_Italic     = 0x04,
    ePdfFont_BoldItalic = ePdfFont_Bold | ePdfFont_Italic,
    ePdfFont_Subsetting = 0x08
};
enum EPdfFontType
{
    ePdfFontType_TrueType,
    ePdfFontType_Type1Pfa,
    ePdfFontType_Type1Pfb,
    ePdfFontType_Type1Base14,
    ePdfFontType_Type3,
    ePdfFontType_Unknown = 0xff
};
enum EPdfStrokeStyle
{
    ePdfStrokeStyle_Solid,
    ePdfStrokeStyle_Dash,
    ePdfStrokeStyle_Dot,
    ePdfStrokeStyle_DashDot,
    ePdfStrokeStyle_DashDotDot,
    ePdfStrokeStyle_Custo
};
enum EPdfTilingPatternType
{
    ePdfTilingPatternType_BDiagonal = 1,
    ePdfTilingPatternType_Cross,
    ePdfTilingPatternType_DiagCross,
    ePdfTilingPatternType_FDiagonal,
    ePdfTilingPatternType_Horizontal,
    ePdfTilingPatternType_Vertical,
    ePdfTilingPatternType_Imag
};
enum EPdfLineCapStyle
{
    ePdfLineCapStyle_Butt    = 0,
    ePdfLineCapStyle_Round   = 1,
    ePdfLineCapStyle_Square  = 2
};
enum EPdfLineJoinStyle
{
    ePdfLineJoinStyle_Miter   = 0,
    ePdfLineJoinStyle_Round   = 1,
    ePdfLineJoinStyle_Bevel   = 2
};
enum EPdfVerticalAlignment
{
    ePdfVerticalAlignment_Top    = 0,
    ePdfVerticalAlignment_Center = 1,
    ePdfVerticalAlignment_Bottom  = 2
};
enum EPdfAlignment
{
    ePdfAlignment_Left    = 0,
    ePdfAlignment_Center  = 1,
    ePdfAlignment_Right   = 2
};
enum EPdfTokenType
{
    ePdfTokenType_Delimiter,
    ePdfTokenType_Token,
    ePdfTokenType_Unknown = 0xFF
};
enum EPdfPageSize
{
    ePdfPageSize_A0,
    ePdfPageSize_A1,
    ePdfPageSize_A2,
    ePdfPageSize_A3,
    ePdfPageSize_A4,
    ePdfPageSize_A5,
    ePdfPageSize_A6,
    ePdfPageSize_Letter,
    ePdfPageSize_Legal,
    ePdfPageSize_Tabloid
};
enum EPdfTextRenderingMode
{
    ePdfTextRenderingMode_Fill = 0,
    ePdfTextRenderingMode_Stroke,
    ePdfTextRenderingMode_FillAndStroke,
    ePdfTextRenderingMode_Invisible,
    ePdfTextRenderingMode_FillToClipPath,
    ePdfTextRenderingMode_StrokeToClipPath,
    ePdfTextRenderingMode_FillAndStrokeToClipPath,
    ePdfTextRenderingMode_ToClipPath,
    ePdfTextRenderingMode_Unknown = 0xff
};
enum EPdfFunctionType
{
    ePdfFunctionType_Sampled = 0,
    ePdfFunctionType_Exponential = 2,
    ePdfFunctionType_Stitching   = 3,
    ePdfFunctionType_PostScript  = 4
};
enum EPdfContentsType
{
    ePdfContentsType_Keyword = 0,
    ePdfContentsType_Variant = 1,
    ePdfContentsType_ImageData = 2
};
enum EPdfTilingPatternType
{
    ePdfTilingPatternType_BDiagonal = 1,
    ePdfTilingPatternType_Cross,
    ePdfTilingPatternType_DiagCross,
    ePdfTilingPatternType_FDiagonal,
    ePdfTilingPatternType_Horizontal,
    ePdfTilingPatternType_Vertical,
    ePdfTilingPatternType_Image
};
enum EPdfError
{
    ePdfError_ErrOk,
    ePdfError_TestFailed,
    ePdfError_InvalidHandle,
    ePdfError_FileNotFound,
    ePdfError_InvalidDeviceOperation,
    ePdfError_UnexpectedEOF,
    ePdfError_OutOfMemory,
    ePdfError_ValueOutOfRange,
    ePdfError_InternalLogic,
    ePdfError_InvalidEnumValue,
    ePdfError_PageNotFound,
    ePdfError_NoPdfFile,
    ePdfError_NoXRef,
    ePdfError_NoTrailer,
    ePdfError_NoNumber,
    ePdfError_NoObject,
    ePdfError_NoEOFToken,
    ePdfError_InvalidTrailerSize,
    ePdfError_InvalidLinearization,
    ePdfError_InvalidDataType,
    ePdfError_InvalidXRef,
    ePdfError_InvalidXRefStream,
    ePdfError_InvalidXRefType,
    ePdfError_InvalidPredictor,
    ePdfError_InvalidStrokeStyle,
    ePdfError_InvalidHexString,
    ePdfError_InvalidStream,
    ePdfError_InvalidStreamLength,
    ePdfError_InvalidKey,
    ePdfError_InvalidName,
    ePdfError_InvalidEncryptionDict,
    ePdfError_InvalidPassword,
    ePdfError_InvalidFontFile,
    ePdfError_InvalidContentStream,
    ePdfError_UnsupportedFilter,
    ePdfError_UnsupportedFontFormat,
    ePdfError_ActionAlreadyPresent,
    ePdfError_WrongDestinationType,
    ePdfError_MissingEndStream,
    ePdfError_Date,
    ePdfError_Flate,
    ePdfError_FreeType,
    ePdfError_SignatureError,
    ePdfError_MutexError,
    ePdfError_UnsupportedImageFormat,
    ePdfError_CannotConvertColor,
    ePdfError_NotImplemented,
    ePdfError_DestinationAlreadyPresent,
    ePdfError_ChangeOnImmutable,
    ePdfError_NotCompiled,
    ePdfError_OutlineItemAlreadyPresent,
    ePdfError_NotLoadedForUpdate,
    ePdfError_CannotEncryptedForUpdate,
    ePdfError_Unknown = 0xffff
};
enum ELogSeverity
{
    eLogSeverity_Critical,
    eLogSeverity_Error,
    eLogSeverity_Warning,
    eLogSeverity_Information,
    eLogSeverity_Debug,
    eLogSeverity_None,
    eLogSeverity_Unknown = 0xffff
};
enum EPdfStringConversion
{
    ePdfStringConversion_Strict,
    ePdfStringConversion_Lenient
};
enum EPdfTokenType
{
    ePdfTokenType_Delimiter,
    ePdfTokenType_Token,
    ePdfTokenType_Unknown = 0xFF
};
enum EPdfAcroFormDefaulAppearance
{
    ePdfAcroFormDefaultAppearance_None,
    ePdfAcroFormDefaultAppearance_BlackText12pt
};
enum EPdfAction
{
    ePdfAction_GoTo,
    ePdfAction_GoToR,
    ePdfAction_GoToE,
    ePdfAction_Launch,
    ePdfAction_Thread,
    ePdfAction_URI,
    ePdfAction_Sound,
    ePdfAction_Movie,
    ePdfAction_Hide,
    ePdfAction_Named,
    ePdfAction_SubmitForm,
    ePdfAction_ResetForm,
    ePdfAction_ImportData,
    ePdfAction_JavaScript,
    ePdfAction_SetOCGState,
    ePdfAction_Rendition,
    ePdfAction_Trans,
    ePdfAction_GoTo3DView,
    ePdfAction_RichMediaExecute,
    ePdfAction_Unknown = 0xff
};
enum EPdfAnnotation
{
    ePdfAnnotation_Text,
    ePdfAnnotation_Link,
    ePdfAnnotation_FreeText,
    ePdfAnnotation_Line,
    ePdfAnnotation_Square,
    ePdfAnnotation_Circle,
    ePdfAnnotation_Polygon,
    ePdfAnnotation_PolyLine,
    ePdfAnnotation_Highlight,
    ePdfAnnotation_Underline,
    ePdfAnnotation_Squiggly,
    ePdfAnnotation_StrikeOut,
    ePdfAnnotation_Stamp,
    ePdfAnnotation_Caret,
    ePdfAnnotation_Ink,
    ePdfAnnotation_Popup,
    ePdfAnnotation_FileAttachement,
    ePdfAnnotation_Sound,
    ePdfAnnotation_Movie,
    ePdfAnnotation_Widget,
    ePdfAnnotation_Screen,
    ePdfAnnotation_PrinterMark,
    ePdfAnnotation_TrapNet,
    ePdfAnnotation_Watermark,
    ePdfAnnotation_3D,
    ePdfAnnotation_RichMedia,
    ePdfAnnotation_WebMedia,
    ePdfAnnotation_Unknown = 0xff
};
enum EPdfAnnotationFlags
{
    ePdfAnnotationFlags_Invisible = 0x0001,
    ePdfAnnotationFlags_Hidden = 0x0002,
    ePdfAnnotationFlags_Print = 0x0004,
    ePdfAnnotationFlags_NoZoom = 0x0008,
    ePdfAnnotationFlags_NoRotate = 0x0010,
    ePdfAnnotationFlags_NoView = 0x0020,
    ePdfAnnotationFlags_ReadOnly = 0x0040,
    ePdfAnnotationFlags_Locked = 0x0080,
    ePdfAnnotationFlags_ToggleNoView = 0x0100,
    ePdfAnnotationFlags_LockedContents = 0x0200,
    ePdfAnnotationFlags_Unknow = 0xffff
};
enum EPdfAnnotationAppearance
{
    ePdfAnnotationAppearance_Normal,
    ePdfAnnotationAppearance_Rollover,
    ePdfAnnotationAppearance_Down
};
enum EPdfDestinationFit
{
    ePdfDestinationFit_Fit,
    ePdfDestinationFit_FitH,
    ePdfDestinationFit_FitV,
    ePdfDestinationFit_FitB,
    ePdfDestinationFit_FitBH,
    ePdfDestinationFit_FitBV,
    ePdfDestinationFit_Unknown = 0xff
};
enum EPdfDestinationType
{
    ePdfDestinationType_XYZ,
    ePdfDestinationType_Fit,
    ePdfDestinationType_FitH,
    ePdfDestinationType_FitV,
    ePdfDestinationType_FitR,
    ePdfDestinationType_FitB,
    ePdfDestinationType_FitBH,
    ePdfDestinationType_FitBV,
    ePdfDestinationType_Unknown = 0xff
};
enum EPdfField
{
    ePdfField_PushButton,
    ePdfField_CheckBox,
    ePdfField_RadioButton,
    ePdfField_TextField,
    ePdfField_ComboBox,
    ePdfField_ListBox,
    ePdfField_Signature,
    ePdfField_Unknown = 0xff
};
enum EPdfHighlightingMode
{
    ePdfHighlightingMode_None,
    ePdfHighlightingMode_Invert,
    ePdfHighlightingMode_InvertOutline,
    ePdfHighlightingMode_Push,
    ePdfField_Unknown = 0xff
};
enum EPdfFunctionType
{
    ePdfFunctionType_Sampled = 0,
    ePdfFunctionType_Exponential = 2,
    ePdfFunctionType_Stitching = 3,
    ePdfFunctionType_PostScript = 4
};
enum EPdfNameLimits
{
    ePdfNameLimits_Before,
    ePdfNameLimits_Inside,
    ePdfNameLimits_After
};
enum EPdfOutlineFormat
{
    ePdfOutlineFormat_Default = 0x00,
    ePdfOutlineFormat_Italic = 0x01,
    ePdfOutlineFormat_Bold = 0x02,
    ePdfOutlineFormat_BoldItalic = 0x03,
    ePdfOutlineFormat_Unknown = 0xff
};
enum EPdfShadingPatternType
{
    ePdfShadingPatternType_FunctionBase = 1,
    ePdfShadingPatternType_Axial = 2,
    ePdfShadingPatternType_Radial = 3,
    ePdfShadingPatternType_FreeForm = 4,
    ePdfShadingPatternType_LatticeForm = 5,
    ePdfShadingPatternType_CoonsPatch = 6,
    ePdfShadingPatternType_TensorProduct = 7
};
